#version 460

#include "DataStruct.h"
layout(binding = e_point_count) buffer Info
{
    uint all_count;
};
layout(std430, binding = e_instance_value) readonly buffer InstanceIndex
{
    uint index[];
};
layout(std430, binding = e_instance_key) readonly buffer InstanceKey
{
    uint key[];
};
layout(std430, binding = e_inverse_index) writeonly buffer InverseMap
{
    int inverse_i[]; // (N), inverse map from id to sorted index
};
layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main()
{
    uint id = gl_GlobalInvocationID.x;
    if (id < all_count) {
        inverse_i[index[id]] = int(id);
    }
}